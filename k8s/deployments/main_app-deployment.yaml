apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend-app
        image: your-backend-image:latest  # Replace with your actual image name and tag
        envFrom:
        - configMapRef:
            name: backend-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret
              key: DJANGO_SECRET_KEY
        ports:
        - containerPort: 8001
      - name: postgres
        image: postgres:14.1-alpine  # Replace with your PostgreSQL image and version
        env:
        - name: POSTGRES_USER
          value: ${MAIN_DB_USER}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: ${MAIN_DB_DATABASE}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend-app
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # Set the desired storage size
